#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_34keys.h"
#include "../zmk-nodefree-config/international_chars/german.dtsi"

/* layer and key shortcuts */
// transparent key
#define ___ &trans

#define BASE 0  // layer shortcuts, must match order in which they are defined below
#define UML 1 // umlaute
#define NAV 2 // navigation
#define NUM 3 // numerical
#define BRC 4 // brackets []{}()<>
#define FUN 5 // F1..F12, bluetooth, media


/* custom behaviors */

// homerow mods
ZMK_BEHAVIOR(hrm, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
)



// euro sign
ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)  // €

// Function key layer via LH1 and RH1 combo  maybe the conditional layer is the wrong mechanism, use combo?
// ZMK_CONDITIONAL_LAYER(NAV NUM, )

// combos
#undef COMBO_TERM
#define COMBO_TERM 40  // timeout of 40ms (default is 30ms if omitted)
ZMK_COMBO(combo_capsword,  &caps_word,  LM1 RM1, BASE)  // f + j, capsWord active on base layer
ZMK_COMBO(combo_esc,  &kp ESC,  LM1 LM2, ALL)  // d + f, Escape active on all layers
ZMK_COMBO(combo_tab,  &kp TAB,  LM2 LM3, ALL)  // s + d, Tab active on all layers
ZMK_COMBO(combo_backspace,  &kp BSPC,  RM1 RM2, ALL)  // j + k, Backspace active on all layers
ZMK_COMBO(combo_return,  &kp RET,  RM2 RM3, ALL)  // k + l, Return active on all layers
ZMK_COMBO(combo_clear_bluetooth,  &bt BT_CLR,  RT0 RT4, FUN)  // y + p, clear all bluetooth profiles on function layer


/* keymaps */

ZMK_LAYER(base_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P 
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &hrm LGUI A   &hrm LALT S   &hrm LCTRL D  &hrm LSHFT F  &kp G             &lt BRC H     &hrm RSHFT J  &hrm LCTRL K  &hrm LALT L   &hrm LGUI SEMI
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp Z         &kp X         &kp C         &lt UML V     &kp B             &kp N         &lt UML M     &kp COMMA     &kp DOT       &kp FSLH
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &lt NUM TAB   &lt NAV RET      &lt FUN SPACE  &lt NUM BSPC  
     //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
)

ZMK_LAYER(umlaut_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          ___           &kp AT_SIGN   &euro_sign    &kp DOLLAR    ___               ___            &de_ue        ___           &de_oe       ___     
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &de_ae        &de_eszett    ___           ___           ___               ___           ___           ___           ___           ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           ___           ___           ___           ___               ___           ___           ___           ___           ___
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    ___           ___               ___           ___          
     //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
)

ZMK_LAYER(nav_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          ___           ___           ___           &kp END       &kp HOME          &kp DEL       &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           ___          &hrm LCTRL K_CUT  ___        ___               &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           &kp DEL       ___           ___           ___               &kp HOME      &kp PG_DN     &kp PG_UP       &kp END     ___
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    ___           ___               ___           ___         
     //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
)

ZMK_LAYER(num_layer,
     // ╭───────────────┬───────────────┬───────────────┬───────────────┬────────────╮   ╭───────────────┬───────────────┬─────────────┬─────────────┬─────────────╮
          &kp N4          &kp N3          &kp N2          &kp N1          &kp N0           &kp N5          &kp N6          &kp N7        &kp N8        &kp N9
     // ├───────────────┼───────────────┼───────────────┼───────────────┼────────────┤   ├───────────────┼───────────────┼─────────────┼─────────────┼─────────────┤
          &hrm LGUI EXCL &hrm LALT MINUS &hrm LCTRL PLUS &hrm LSHFT EQUAL &kp UNDER      &lt BRC APOS   &hrm RSHFT COLON &hrm LCTRL DQT &hrm LALT TILDE &hrm LGUI PRCNT
     // ├───────────────┼───────────────┼───────────────┼───────────────┼────────────┤   ├───────────────┼───────────────┼─────────────┼─────────────┼─────────────┤
          ___            &kp SLASH       &kp STAR        &kp BSLH         &kp PIPE        &kp GRAVE      &kp AMPS         &kp HASH       &kp CARET     ___
     // ╰───────────────┼───────────────┼───────────────┼───────────────┼────────────┤   ├───────────────┼───────────────┼─────────────┼─────────────┼─────────────┤
                                                            ___           ___               ___           ___         
     //                                                  ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
)

ZMK_LAYER(brackets_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          ___           ___           ___           ___           ___               ___            ___          ___           ___           ___     
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           &kb LBKT      &kb LBRC      &kb LPAR       &kb LT           ___           ___           ___           ___           ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           &kb RBKT      &kb RBRC      &kb RPAR       &kb GT           ___           ___           ___           ___           ___
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    ___           ___               ___           ___          
     //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
)

ZMK_LAYER(function_layer,
     // ╭───────────────┬───────────────┬───────────────┬───────────────┬────────────╮   ╭───────────────┬───────────────┬─────────────┬─────────────┬─────────────╮
          &kp C_MUTE      &kp C_VOL_UP    &kp C_VOL_DN     ___            ___              &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
     // ├───────────────┼───────────────┼───────────────┼───────────────┼────────────┤   ├───────────────┼───────────────┼─────────────┼─────────────┼─────────────┤
          &hrm LGUI EXCL &hrm LALT MINUS &hrm LCTRL PLUS &hrm LSHFT EQUAL &kp UNDER        &lt BRC APOS   &hrm RSHFT COLON &hrm LCTRL DQT &hrm LALT TILDE &hrm LGUI PRCNT      &kp DOWN      &kp UP        &kp RIGHT     ___
     // ├───────────────┼───────────────┼───────────────┼───────────────┼────────────┤   ├───────────────┼───────────────┼─────────────┼─────────────┼─────────────┤
          ___            &kp SLASH       &kp START        &kp BSLH         &kp PIPE        &kp GRAVE      &kp AMPS         &kp HASH       &kp CARET     ___
     // ╰───────────────┼───────────────┼───────────────┼───────────────┼────────────┤   ├───────────────┼───────────────┼─────────────┼─────────────┼─────────────┤
                                                            ___           ___               ___           ___         
     //                                                 ╰───────────────┴────────────╯   ╰───────────────┴───────────────╯
)
